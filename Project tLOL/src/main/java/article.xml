<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="articlens">
	<select id="selectList" parameterType="map" resultType="article">
		select *
		from (select rowNum rn, e.* from (select a.*, m.member_nickname, null,
		(select count(*) from articleRecom ar where a.board_num = ar.board_num
		and a.article_num = ar.article_num) article_recom
		from
		article a, member
		m
		where a.board_num=${board_num} and
		a.member_num = m.member_num
		order by
		a.article_num desc) e) where rn
		between ${startRow} and ${endRow}
	</select>
	<select id="selectMyList" parameterType="map"
		resultType="article">
		select * from (select rowNum rn, e.* from (select a.*,
		null, b.board_name, (select count(*) from articleRecom ar where
		a.board_num = ar.board_num and a.article_num = ar.article_num)
		article_recom
		from article a, board b where
		a.member_num=${member_num}
		and a.board_num =
		b.board_num order by
		a.article_date desc) e) where rn
		between ${startRow}
		and ${endRow}
	</select>
	<select id="selectManageList" parameterType="map"
		resultType="article">
		select * from (select rowNum rn, e.* from (select a.*,
		null, b.board_name, (select count(*) from articleRecom ar where
		a.board_num = ar.board_num and a.article_num = ar.article_num)
		article_recom
		from article a, board b where a.board_num =
		b.board_num
		order by
		a.article_date desc) e) where rn between
		${startRow} and
		${endRow}
	</select>
	<select id="selectSearchList" parameterType="map"
		resultType="article">
		select *
		from (select rowNum rn, e.* from (select a.*,
		m.member_nickname, null, (select count(*) from articleRecom ar where
		a.board_num = ar.board_num and a.article_num = ar.article_num)
		article_recom
		from
		article a, member m where
		a.board_num=${board_num}
		and
		article_del = 'n' and
		a.member_num =
		m.member_num and
		(a.article_title
		like ${keyword} or a.article_content
		like ${keyword})
		order by
		a.article_num
		desc) e) where rn
		between
		${startRow} and ${endRow}
	</select>
	<select id="selectSearchAllList" parameterType="map"
		resultType="article">
		select *
		from (select rowNum rn, e.* from (select a.*,
		m.member_nickname, b.board_name, (select count(*) from articleRecom ar
		where a.board_num = ar.board_num and a.article_num = ar.article_num)
		article_recom
		from
		article a, member m, board b
		where
		a.member_num =
		m.member_num and
		a.article_del = 'n' and
		a.board_num =
		b.board_num and
		(a.article_title like ${keyword} or
		a.article_content like
		${keyword})
		order by a.article_num desc) e) where rn
		between
		${startRow}
		and
		${endRow}
	</select>
	<select id="total" parameterType="int" resultType="int">
		select
		count(*) from article where board_num=#{board_num}
	</select>
	<select id="myTotal" parameterType="int" resultType="int">
		select
		count(*) from article where member_num=#{member_num}
	</select>
	<select id="manageTotal" resultType="int">
		select
		count(*) from article
	</select>
	<select id="searchTotal" parameterType="map" resultType="int">
		select
		count(*) from article where board_num=${board_num} and article_del =
		'n' and
		(article_title like ${keyword} or article_content like
		${keyword})
	</select>
	<select id="searchAllTotal" parameterType="map" resultType="int">
		select
		count(*) from article where article_del = 'n' and
		(article_title
		like ${keyword} or article_content like ${keyword})
	</select>
	<update id="readcount" parameterType="map">
		update article set
		article_read = article_read + 1 where board_num = ${ board_num} and
		article_num = ${ article_num}
	</update>
	<select id="select" parameterType="map" resultType="article">
		select a.*,
		m.member_nickname, b.board_name, (select count(*) from articleRecom ar
		where a.board_num = ar.board_num and a.article_num = ar.article_num)
		article_recom from article a, member m, board b
		where a.board_num = ${
		board_num} and a.article_num = ${
		article_num}
		and m.member_num =
		a.member_num and a.board_num =
		b.board_num
	</select>
	<insert id="insert" parameterType="article">
		<selectKey keyProperty="article_num" order="BEFORE"
			resultType="integer">
			select nvl(max(article_num), 0) + 1 article_num from
			article where board_num=#{board_num}
		</selectKey>
		insert into article values(#{board_num}, #{article_num},
		#{member_num}, #{article_title}, #{article_content}, to_char(sysdate,
		'RRRR.MM.DD HH24:MI:SS'), 0
		,'n')
	</insert>
	<delete id="deleteForUpdate" parameterType="map">
		delete from article where article_num = ${article_num} and board_num =
		${board_num}
	</delete>
	<insert id="update" parameterType="article">
		insert into article values(#{board_num}, #{article_num},
		#{member_num}, #{article_title}, #{article_content}, #{article_date}, 0
		,'n')
	</insert>
	<update id="delete" parameterType="map">
		update article set article_del
		= 'y'
		where article_num = ${article_num} and board_num = ${board_num}
	</update>
	<insert id="addRecom" parameterType="map">
		insert into articleRecom
		values(${member_num}, ${board_num}, ${article_num})
	</insert>
	<select id="findRecom" parameterType="map" resultType="int">
		select
		member_num from articleRecom where member_num=${member_num} and
		board_num=${board_num} and article_num=${article_num}
	</select>
		
	<select id="hotList" resultType="article">
		select r2.*, nvl(com.comment_count,0) comment_count from (select r.* from (select a.*, m.member_nickname, b.board_name, hot.article_recom from article a,
		(select article_num, count(*) as article_recom from articleRecom group by article_num) hot, member m, board b
		where a.member_num = m.member_num and a.board_num = b.board_num and a.article_num = hot.article_num
		order by article_recom desc, article_date desc) r
		<![CDATA[where rownum <= 10]]>) r2 left outer join
		(select article_num, count(*) as comment_count from comments group by article_num) com
		on r2.article_num = com.article_num
		order by article_recom desc, article_date desc
	</select>
</mapper> 